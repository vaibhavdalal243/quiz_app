# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, and run tests across different versions of node
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Dev-CI-CD

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:
  build:
    name: Build & push docker image
    runs-on: ubuntu-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Log in to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Declare some variables
          id: vars
          shell: bash
          run: |
            echo "branch=$(echo ${GITHUB_REF#refs/heads/} | sed "s/\\//-/g")" >> $GITHUB_OUTPUT
            echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            echo "repo_name=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')" >> $GITHUB_OUTPUT
        
        - name: Build and push Docker image
          uses: docker/build-push-action@v3
          with:
            context: .
            push: true
            tags: vaibhavdalal2904/quiz_app:${{ steps.vars.outputs.branch }}_${{ steps.vars.outputs.sha_short }}

        # - name: configure aws credentials
        #   uses: aws-actions/configure-aws-credentials@v1.7.0
        #   with:
        #     role-to-assume: arn:aws:iam::022608205880:role/github-oidc-role-vaibhav #change to reflect your IAM roleâ€™s ARN
        #     role-session-name: GitHub_to_AWS_via_FederatedOIDC
        #     aws-region: ${{ env.AWS_REGION }}

        # # Hello from AWS: WhoAmI
        # - name: Sts GetCallerIdentity
        #   run: |
        #     aws sts get-caller-identity

        # configure AWS Credentials

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2        

        - name: Download task definition
          run: |
            aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINTION_NAME }} \
            --query taskDefinition > task-definition.json

        - name: New image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json
            container-name: nodejs-app
            image: vaibhavdalal2904/quiz_app:${{ steps.vars.outputs.branch }}_${{ steps.vars.outputs.sha_short }}

        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: ${{ secrets.SERVICE_NAME }}
            cluster: ${{ secrets.CLUSTER_NAME }}
            # wait-for-service-stability: true
